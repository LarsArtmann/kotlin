/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.test.runners.codegen;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/testData/codegen/boxSourceAndBinary")
@TestDataPath("$PROJECT_ROOT")
public class CompileKotlinAgainstKotlinWithBinaryAndSourcesTestGenerated extends AbstractCompileKotlinAgainstKotlinWithBinaryAndSourcesTest {
    @Test
    public void testAllFilesPresentInBoxSourceAndBinary() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/testData/codegen/boxSourceAndBinary"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
    }

    @Test
    @TestMetadata("classDeclaration.kt")
    public void testClassDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/classDeclaration.kt");
    }

    @Test
    @TestMetadata("functionDeclaration.kt")
    public void testFunctionDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/functionDeclaration.kt");
    }

    @Test
    @TestMetadata("memberFunctionDeclaration.kt")
    public void testMemberFunctionDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/memberFunctionDeclaration.kt");
    }

    @Test
    @TestMetadata("memberFunctionWithDefaultArgumentsDeclaration.kt")
    public void testMemberFunctionWithDefaultArgumentsDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/memberFunctionWithDefaultArgumentsDeclaration.kt");
    }

    @Test
    @TestMetadata("memberPropertyDeclaration.kt")
    public void testMemberPropertyDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/memberPropertyDeclaration.kt");
    }

    @Test
    @TestMetadata("nestedClassDeclaration.kt")
    public void testNestedClassDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/nestedClassDeclaration.kt");
    }

    @Test
    @TestMetadata("propertyDeclaration.kt")
    public void testPropertyDeclaration() throws Exception {
        runTest("compiler/testData/codegen/boxSourceAndBinary/propertyDeclaration.kt");
    }
}
